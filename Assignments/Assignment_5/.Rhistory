read.csv("../../Data/1620_scores.csv")
read.csv("../../Data/Bird_Measurements.csv")
read.csv("../../Data/Fake_grade_data.csv")
![](i2.png)
library(ggmap)
chennai <-  geocode("Chennai")  # get longitude and latitude
data("iris")
mean(iris$Sepal.Length)
iris$Sepal.Length - mean(iris$Sepal.Length)
mean(iris$Sepal.Length) - iris$Sepal.Length
dev <- mean(iris$Sepal.Length) - iris$Sepal.Length
ggplot(iris, aes(x=dev,y=Species)) + geom_bar()
ggplot(iris, aes(x=dev,y=Species)) + geom_bar(stat="identity")
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity")
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity") + coord_flip()
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", aes(fill=Species)) + coord_flip()
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", aes(fill=Species)) + coord_flip() + theme_minimal()
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", aes(fill=Species))
cbind(iris,dev)
dev <- round((iris$Sepal.Length - mean(iris$Sepal.Length))/sd(iris$Sepal.Length),2)
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", aes(fill=Species)) + coord_flip() + theme_minimal()
dev <- iris$Sepal.Length-mean(iris$Sepal.Length)
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", aes(fill=Species)) + coord_flip() + theme_minimal() +
labs(x=)
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", aes(fill=Species)) + coord_flip() + theme_minimal() +
labs(x="Deviance")
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", width=.5, aes(fill=Species)) + coord_flip() + theme_minimal() +
labs(x="Deviance")
mean(iris$Sepal.Length)
iris$Sepal.Length
dev <- iris$Sepal.Length-mean(iris$Sepal.Length)
cbind(iris,dev)
ggplot(iris, aes(x=Species,y=dev)) + geom_bar(stat="identity", width=.5, aes(fill=Species))
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + coord_flip() + theme_minimal() +
labs(x="Deviance")
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + theme_minimal() +
labs(x="Deviance",y="Species",title="Sepal length deviance from the mean for all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + theme_minimal() +
labs(x="Deviance",y="Species",title="Sepal length deviance from the mean of all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
ggsave("./i4.png")
ggplot(iris, aes(x=Species,y=dev)) + geom_point(aes(color=Species)) + theme_minimal() +
labs(x="Deviance",y="Species",title="Sepal length deviance from the mean of all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + theme_minimal() +
labs(x="Deviance",y="Species",title="Sepal length deviance from the mean of all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + theme_minimal() +
labs(x="Species",y="Deviance",title="Sepal length deviance from the mean of all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
ggsave("./i4.png")
iris$dev = dev
ggplot(iris, aes(y=dev)) + geom_bar(stat="identity")
ggplot(iris, aes(x=dev)) + geom_bar(stat="identity")
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
iris$id = row.names(iris)
iris[order(iris$dev),]
iris <- iris[order(iris$dev),]
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
iris
order(iris$dev)
View(iris)
iris$id = row.names(iris)
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
iris$id = factor(iris$id, levels = iris$id)
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
data("iris")
dev <- iris$Sepal.Length-mean(iris$Sepal.Length)
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + theme_minimal() +
labs(x="Species",y="Deviance",title="Sepal length deviance from the mean of all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
ggsave("./i4.png")
iris$dev = dev
iris <- iris[order(iris$dev),]
iris$id = row.names(iris)
iris$id = factor(iris$id, levels = iris$id)
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
iris$dev = dev
iris$id = row.names(iris)
iris <- iris[order(iris$dev),]
iris$id = factor(iris$id, levels = iris$id)
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
data("iris")
dev <- iris$Sepal.Length-mean(iris$Sepal.Length)
ggplot(iris, aes(x=Species,y=dev)) + geom_boxplot(aes(fill=Species)) + theme_minimal() +
labs(x="Species",y="Deviance",title="Sepal length deviance from the mean of all species",caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)") +
coord_flip()
# ggsave("./i4.png")
iris$dev = dev
iris <- iris[order(iris$dev),]
data("iris")
dev <- iris$Sepal.Length-mean(iris$Sepal.Length)
iris$dev = dev
iris$id = row.names(iris)
iris <- iris[order(iris$dev),]
iris$id = factor(1:nrow(iris), levels = iris$id)
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity")
ggplot(iris, aes(x=row.names(iris),y=dev)) + geom_bar(stat="identity", aes(Species)) + coord_flip()
ggplot(iris, aes(x=id,y=dev)) + geom_bar(stat="identity", aes(Species)) + coord_flip()
ggplot(iris, aes(x=id,y=dev)) + geom_bar(stat="identity")
iris$id = factor(1:nrow(iris), levels = 1:nrow(iris))
ggplot(iris, aes(x=id,y=dev)) + geom_bar(stat="identity")
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip()
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.x = element_blank())
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank())
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank()) + labs(x="Sepal Length Deviance from the Mean")
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank()) + labs(y="Sepal Length Deviance from the Mean")
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank()) + labs(y="Sepal Length Deviance from the Mean", x = "")
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank()) + labs(y="Deviance from the Mean", title = "Sepal length deviance from the mean of all observations",
caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)")
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank()) + labs(y="Deviance from the Mean", title = "Sepal length deviance from the mean of all observations",
caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)",x="")
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() +
theme(axis.text.y = element_blank()) + labs(y="Deviance from the Mean", title = "Sepal length deviance from the mean of all observations",
caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)",x="") + theme_minimal()
ggplot(iris, aes(x=id,y=dev,fill=Species)) + geom_bar(stat="identity") + coord_flip() + theme_minimal() +
theme(axis.text.y = element_blank()) + labs(y="Deviance from the Mean", title = "Sepal length deviance from the mean of all observations",
caption = "Note: Deviance = Sepal.Length - mean(Sepal.Length)",x="")
ggsave("./i4.png")
install.packages(c("tidyverse", "carData", "RcolorBrewer"))
library(tidyverse)
# Load packages we will use
library(tidyverse)
data("midwest", package = "ggplot2")
View(midwest)
View(midwest)
View(midwest)
# Letâ€™s initialize a basic ggplot based on the midwest dataset that we loaded.
ggplot(midwest) # what do you see?
# give it some aesthetics to work with...
ggplot(midwest, aes(x=area, y=poptotal))  # area and poptotal are columns in 'midwest'
# Give it a geom to map to your defined aesthetics... Basic Scatterplot, in this case:
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() # The "+" tells ggplot to add another layer to our base plot
# Add another geom ... a trendline:
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method = "lm")
# Store your plot as an object to add to...
p <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method = "lm")
# Zoom in
p + lims(x=c(0,0.1),y=c(0,1000000)) # what did this do?
p + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) # how is this different?
# Store this new zoomed-in plot
p2 <- p + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000))
# Add Title and Labels:
p2 + labs(title="Area Vs Population",
subtitle="From midwest dataset",
y="Population",
x="Area",
caption="Midwest Demographics")
# Change color of points and line to static values:
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(color="steelblue",size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
# Here's where ggplot gets really cool...
# Suppose if we want the color to change based on another column in the source dataset,
# we can specify "color" inside the "aesthetic" aes() function.
p3 <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
# Here's where ggplot gets really cool...
# Suppose if we want the color to change based on another column in the source dataset,
# we can specify "color" inside the "aesthetic" aes() function.
p3 <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
p3
# Don't like those colors?
p3 + scale_color_brewer(palette = "Set1")
# Want more color choices? You can check them out in the RColorBrewer package, or even make your own
brewer.pal.info
p3 + scale_color_viridis_d()
# Make your own and take a peek at it:
pal = c("#c4a113","#c1593c","#643d91","#820616","#477887","#688e52",
"#12aa91","#705f36","#8997b2","#753c2b","#3c3e44","#b3bf2d",
"#82b2a4","#894e7d","#a17fc1","#262a8e","#abb5b5","#000000")
# You can even check to see if your color choices would work for someone who has colorblindness...
cvd_grid(palette_plot(pal))
# Our plot with my custom color palette
p3 + scale_color_manual(values=pal)
# Other neat tricks:
p3 + scale_x_reverse()
p3 + theme_dark()
# You can also transform your data right in ggplot:
p4 = ggplot(midwest, aes(x=area/max(midwest$area), y=log10(poptotal))) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
labs(title="Area Vs Population", subtitle="From midwest dataset", color = "State",
y="log10 Population", x="Area (proportion of max)", caption="Midwest Demographics") +
theme_minimal() +
scale_color_manual(values=pal)
p4
# Want to divide up your plot into multiple ones based on a categorical variable?
p4 + facet_wrap(~ state)
p4 + facet_wrap(~ state, scales = "free") + theme(legend.position = "none")
p4 + facet_wrap(~ state) + theme(legend.position = "none", strip.text.x = element_text(size = 12, face="bold"))
p4 + facet_wrap(~ state) + theme(legend.position = "none",
strip.text.x = element_text(size = 12, face="bold"),
strip.background = element_rect(fill = "lightblue"))
# Some other "geom" types ... for categorical x axis
p5 = ggplot(midwest, aes(x=state,y=percollege, fill=state)) + labs(x="State",y="Percent with college degree")
p5
# Some other "geom" types ... for categorical x axis
p5 = ggplot(midwest, aes(x=state,y=percollege, fill=state)) + labs(x="State",y="Percent with college degree")
p5
p5 + geom_boxplot()
p5 + geom_violin()
p5 + geom_bar(stat="identity") # something wrong with this picture!
ggplot(MplsStops, aes(x=lat, fill = race)) + geom_density(alpha = .5) + labs(title = "Latitude of police stops in Minneapolis - 2017")
# Geoms for looking at a single variable's distribution:
data("MplsStops")
ggplot(MplsStops, aes(x=lat, fill = race)) + geom_density(alpha = .5) + labs(title = "Latitude of police stops in Minneapolis - 2017")
# Geoms for looking at a single variable's distribution:
data("MplsStops")
p5 + geom_bar(stat="identity") # something wrong with this picture!
# Geoms for looking at a single variable's distribution:
data("MplsStops")
# Geoms for looking at a single variable's distribution:
data(MplsStops)
# Geoms for looking at a single variable's distribution:
data(MplsStops)
